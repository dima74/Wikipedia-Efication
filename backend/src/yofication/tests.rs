use lazy_static::lazy_static;

use backend::string_utils::deyoficate_str;

use super::*;

lazy_static! {
    static ref YOFICATION: Yofication = Yofication::new().unwrap();
}

fn test_yofication_generic(text: &str, expected: &str) {
    let (yoficated_text, _) = YOFICATION.yoficate(text, 60);
    assert_eq!(expected, yoficated_text);
}

fn test_yofication(expected: &str) {
    let text = deyoficate_str(expected);
    test_yofication_generic(&text, expected);
}

fn test_noyofication(text: &str) {
    test_yofication_generic(text, text);
}

#[test]
fn test_basic() {
    test_yofication("–∑–µ–ª—ë–Ω—ã–π");
    test_yofication("–ø—Ä–∏ –Ω—ë–º –±—ã–ª");
}

#[test]
fn test_hyphens() {
    test_yofication("–∞–±–≤–≥–¥-–∑–µ–ª—ë–Ω—ã–π");
    test_yofication("–∞–±–≤–≥–¥-–∂—ë–ª—Ç–æ-–∑–µ–ª—ë–Ω—ã–π");
    test_yofication("24-–∑–µ–ª—ë–Ω—ã–π");
}

#[test]
fn test_utf32() {
    test_yofication("ùÑû –∑–µ–ª—ë–Ω—ã–π ùÑû –∑–µ–ª—ë–Ω—ã–π ùÑû");
}

#[test]
fn test_modifiers() {
    test_yofication("—ë—Ñ–∏–∫–∞ÃÅ—Ç–æ—Ä");
    test_yofication("–∑–µ–ª—ë¬≠–Ω—ã–π");
}

#[test]
fn test_apostrophes() {
    test_noyofication("–µ–µ`–µ–µ, –µ–µ‚Äô–µ–µ");
    test_noyofication("–∑–µ–ª–µ`–Ω—ã–π, –∑–µ–ª–µ‚Äô–Ω—ã–π");
}

#[test]
fn test_words_with_yo() {
    // –Ω–µ –≤—Å–µ ¬´—ë¬ª
    test_yofication_generic("—á–µ—Ç—ã—Ä—ë—Ö–∑–≤–µ–∑–¥–æ—á–Ω—ã–π", "—á–µ—Ç—ã—Ä—ë—Ö–∑–≤—ë–∑–¥–æ—á–Ω—ã–π");
    test_yofication_generic("—á–µ—Ç—ã—Ä–µ—Ö–∑–≤—ë–∑–¥–æ—á–Ω—ã–π", "—á–µ—Ç—ã—Ä—ë—Ö–∑–≤—ë–∑–¥–æ—á–Ω—ã–π");

    // –ª–∏—à–Ω—è—è ¬´—ë¬ª
    test_yofication_generic("—á—ë—Ç—ã—Ä—ë—Ö–∑–≤—ë–∑–¥–æ—á–Ω—ã–π", "—á–µ—Ç—ã—Ä—ë—Ö–∑–≤—ë–∑–¥–æ—á–Ω—ã–π");

    // ¬´—ë¬ª –Ω–µ –≤ —Ç–æ–º –º–µ—Å—Ç–µ
    test_yofication_generic("—á—ë—Ç—ã—Ä–µ—Ö–∑–≤–µ–∑–¥–æ—á–Ω—ã–π", "—á–µ—Ç—ã—Ä—ë—Ö–∑–≤—ë–∑–¥–æ—á–Ω—ã–π");
}

#[test]
fn test_abbreviation() {
    test_noyofication("–Ω–µ–º.");
    test_yofication("–∑–µ–ª—ë–Ω—ã–π.");
}

#[test]
fn test_after_link() {
    test_noyofication("[[–≤–µ—Ä—Ö–Ω]]–µ–µ");
    test_noyofication("[[–≤–µ—Ä—Ö–Ω]]–µ–µ —Å–µ–ª–æ");
}

#[test]
fn test_inside_link() {
    test_yofication("[[–µ—ë]]");
    test_yofication("[[–µ—ë –¥–∞ –µ—ë]]");
    test_yofication("[[–µ—ë|–µ—ë]]");
    test_yofication("[[ –µ—ë ]]");
}

#[test]
fn test_inside_tags() {
    test_noyofication("{{–Ω–∞—á–∞–ª–æ —Ü–∏—Ç–∞—Ç—ã}}  –µ–µ  {{–∫–æ–Ω–µ—Ü —Ü–∏—Ç–∞—Ç—ã}}");
    test_noyofication("{{—Ü–∏—Ç–∞—Ç–∞|          –µ–µ  }}");
    test_noyofication("{{quote box|       –µ–µ  }}");
    test_noyofication("<blockquote>       –µ–µ  </blockquote>");
    test_noyofication("<ref>              –µ–µ  </ref>");
    test_noyofication("<poem>             –µ–µ  </poem>");
    test_noyofication("<nowiki>           –µ–µ  </nowiki>");
}

#[test]
fn test_self_closed_tags() {
    test_noyofication("<ref>–µ–µ</ref>");
    test_yofication(r#"<ref name="...">...</ref><ref name="..." /> –µ—ë <ref name="..." /><ref name="...">...</ref>"#);
}
